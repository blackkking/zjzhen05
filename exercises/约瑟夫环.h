//约瑟夫环的题
/*
有N个人（编号从0开始到n-1），从0开始报数，报到（m-1）退出，剩下的人继续从0开始报数。求winner是几号（从1开始到m）退出
分析：当第一个人（编号一定是（m-1）%n -1）出列后，剩下的n-1个人组成了一个新的约瑟夫环（以编号为k=m-1%n的人开始）
k k+1 k+2 .... n-2 n-1 0 1 2 .... k-2 并且从K开始报0
k->0 k+1->1 k+2->2 ... k-2->n-2
转化为了（n-1）的个人报数问题。若该问题的解是X，X为最终的胜利者，把X转化为N个人的情况的解
变回去的公式为： X' = (X+k)%n （编号转化）
如何求出n-1报数的解？求出n-2的解

让f[i]表示i个人玩游戏报m退出最终胜利者的编号最终的结果自然是f[n]
递归公式为：f[1]=0;  f[i]=(f[i-1]+m)%i(i>1)
有了这个公式我们要做的就是从1到n 顺序计算出f[i]的值
最后的结果是f[n]因为实际生活中的编号总是从1开始，我们输出f[n]+1，由于逐级的递推，不用保存每个f[i]

*/

#include<stdio.h>
int main()
{
	int n , m , i , s =  0 ;
	printf("请输入人数和退出的号码：");
	scanf("%d%d",&n,&m);
	for(i=2;i<=n;i++)
	{
		s = (s + m)%i;
	}
	printf("胜利者是%d号\n",s+1);
	return 0;
}
